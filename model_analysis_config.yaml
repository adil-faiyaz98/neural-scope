# Neural-Scope Model Analysis Configuration

# Model Information
model:
  name: "my_model"                  # Name of the model
  path: "models/my_model.pt"        # Path to the model file
  framework: "pytorch"              # Framework: pytorch, tensorflow
  description: "My custom model"    # Description of the model

# Analysis Settings
analysis:
  batch_size: 32                    # Batch size for inference
  input_shape: [1, 3, 224, 224]     # Input shape for the model
  device: "cuda"                    # Device to use: cuda, cpu
  precision: "fp32"                 # Precision: fp32, fp16, int8

# Optimization Settings
optimization:
  techniques:                       # Optimization techniques to apply
    - quantization
    - pruning
    - layer_fusion
  quantization:
    dtype: "qint8"                  # Quantization data type
    scheme: "symmetric"             # Quantization scheme
  pruning:
    sparsity: 0.7                   # Target sparsity
    method: "magnitude"             # Pruning method
  distillation:
    teacher_model: "models/teacher.pt"  # Path to teacher model
    temperature: 2.0                # Distillation temperature

# Validation Settings
validation:
  dataset_path: "data/val_data.csv" # Path to validation dataset
  metric: "accuracy"                # Metric to use for validation
  threshold: 0.9                    # Minimum acceptable metric value

# Security Settings
security:
  check_vulnerabilities: true       # Check for known vulnerabilities
  check_adversarial: true           # Check for adversarial robustness
  check_backdoors: true             # Check for potential backdoors

# MLflow Settings
mlflow:
  tracking_uri: "http://localhost:5000"  # MLflow tracking URI
  experiment_name: "model-optimization"  # MLflow experiment name
  register_model: true              # Register model in MLflow Model Registry

# CI/CD Settings
cicd:
  system: "github_actions"          # CI/CD system to use
  workflow_name: "model-optimization"  # Name of the workflow
  trigger_on:                       # Events to trigger the workflow
    - push
    - pull_request
  notify_on_completion: true        # Send notifications when the workflow completes

# Reporting Settings
reporting:
  format: "html"                    # Report format: html, json, markdown
  include_visualizations: true      # Include visualizations in the report
  compare_to_baseline: true         # Compare to baseline model
  baseline_model: "models/baseline.pt"  # Path to baseline model
